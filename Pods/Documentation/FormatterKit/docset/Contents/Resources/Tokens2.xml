<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/TTTArrayFormatter.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/TTTArrayFormatter</TokenIdentifier>
			<Abstract type="html">Instances of TTTArrayFormatter create localized string representations of NSArray objects, and convert textual representations of arrays into NSArray objects.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/stringFromArray:</TokenIdentifier>
			<Abstract type="html">Returns a string representation of a given array formatted using the receiver’s current settings.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>- (NSString *)stringFromArray:(NSArray *)anArray</Declaration>
			<Parameters>
				<Parameter>
					<Name>anArray</Name>
					<Abstract type="html">The array to format.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/stringFromArray:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/stringFromArray:rangesOfComponents:</TokenIdentifier>
			<Abstract type="html">Returns a string representation of a given array formatted using the receiver’s current settings along with the substring ranges for the components in the formatted string.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>- (NSString *)stringFromArray:(NSArray *)anArray rangesOfComponents:(NSArray **)rangeValues</Declaration>
			<Parameters>
				<Parameter>
					<Name>anArray</Name>
					<Abstract type="html">The array to format.</Abstract>
				</Parameter><Parameter>
					<Name>rangeValues</Name>
					<Abstract type="html">Upon return contains an array of NSRange objects that represent the substring ranges of the components in the formatted string.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/stringFromArray:rangesOfComponents:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/arrayFromString:</TokenIdentifier>
			<Abstract type="html">Returns an array representation of a given string interpreted using the receiver’s current settings.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)arrayFromString:(NSString *)aString</Declaration>
			<Parameters>
				<Parameter>
					<Name>aString</Name>
					<Abstract type="html">The string to parse.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/arrayFromString:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TTTArrayFormatter/localizedStringFromArray:arrayStyle:</TokenIdentifier>
			<Abstract type="html">Returns a string representation of a given array formatted using the default settings in the specified array format style.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)localizedStringFromArray:(NSArray *)anArray arrayStyle:(TTTArrayFormatterStyle)style</Declaration>
			<Parameters>
				<Parameter>
					<Name>anArray</Name>
					<Abstract type="html">The array to be formatted.</Abstract>
				</Parameter><Parameter>
					<Name>style</Name>
					<Abstract type="html">The style used to format the array.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/localizedStringFromArray:arrayStyle:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/setArrayStyle:</TokenIdentifier>
			<Abstract type="html">Specifies the style used to format arrays. TTTArrayFormatterSentenceStyle by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) TTTArrayFormatterStyle arrayStyle</Declaration>
			
			
			<Anchor>//api/name/arrayStyle</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/arrayStyle</TokenIdentifier>
			<Abstract type="html">Specifies the style used to format arrays. TTTArrayFormatterSentenceStyle by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) TTTArrayFormatterStyle arrayStyle</Declaration>
			
			
			<Anchor>//api/name/arrayStyle</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/arrayStyle</TokenIdentifier>
			<Abstract type="html">Specifies the style used to format arrays. TTTArrayFormatterSentenceStyle by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) TTTArrayFormatterStyle arrayStyle</Declaration>
			
			
			<Anchor>//api/name/arrayStyle</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/setDelimiter:</TokenIdentifier>
			<Abstract type="html">Specifies the string used to delimit the components in the array. &quot;,&quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *delimiter</Declaration>
			
			
			<Anchor>//api/name/delimiter</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/delimiter</TokenIdentifier>
			<Abstract type="html">Specifies the string used to delimit the components in the array. &quot;,&quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *delimiter</Declaration>
			
			
			<Anchor>//api/name/delimiter</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/delimiter</TokenIdentifier>
			<Abstract type="html">Specifies the string used to delimit the components in the array. &quot;,&quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *delimiter</Declaration>
			
			
			<Anchor>//api/name/delimiter</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/setSeparator:</TokenIdentifier>
			<Abstract type="html">Specifies the string used to separate delimiters from the next component. &quot; &quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *separator</Declaration>
			
			
			<Anchor>//api/name/separator</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/separator</TokenIdentifier>
			<Abstract type="html">Specifies the string used to separate delimiters from the next component. &quot; &quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *separator</Declaration>
			
			
			<Anchor>//api/name/separator</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/separator</TokenIdentifier>
			<Abstract type="html">Specifies the string used to separate delimiters from the next component. &quot; &quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *separator</Declaration>
			
			
			<Anchor>//api/name/separator</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/setConjunction:</TokenIdentifier>
			<Abstract type="html">Specifies the localized string used to join the penultimate and last components together when applied with the TTTArrayFormatterSentenceStyle. &quot;and&quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/usesAbbreviatedConjunction</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, strong) NSString *conjunction</Declaration>
			
			
			<Anchor>//api/name/conjunction</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/conjunction</TokenIdentifier>
			<Abstract type="html">Specifies the localized string used to join the penultimate and last components together when applied with the TTTArrayFormatterSentenceStyle. &quot;and&quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/usesAbbreviatedConjunction</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, strong) NSString *conjunction</Declaration>
			
			
			<Anchor>//api/name/conjunction</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/conjunction</TokenIdentifier>
			<Abstract type="html">Specifies the localized string used to join the penultimate and last components together when applied with the TTTArrayFormatterSentenceStyle. &quot;and&quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/usesAbbreviatedConjunction</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, strong) NSString *conjunction</Declaration>
			
			
			<Anchor>//api/name/conjunction</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/setAbbreviatedConjunction:</TokenIdentifier>
			<Abstract type="html">Specifies the abbreviated localized string used to join the penultimate and last components together when applied with the TTTArrayFormatterSentenceStyle. &quot;&amp;amp;&quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/usesAbbreviatedConjunction</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, strong) NSString *abbreviatedConjunction</Declaration>
			
			
			<Anchor>//api/name/abbreviatedConjunction</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/abbreviatedConjunction</TokenIdentifier>
			<Abstract type="html">Specifies the abbreviated localized string used to join the penultimate and last components together when applied with the TTTArrayFormatterSentenceStyle. &quot;&amp;amp;&quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/usesAbbreviatedConjunction</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, strong) NSString *abbreviatedConjunction</Declaration>
			
			
			<Anchor>//api/name/abbreviatedConjunction</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/abbreviatedConjunction</TokenIdentifier>
			<Abstract type="html">Specifies the abbreviated localized string used to join the penultimate and last components together when applied with the TTTArrayFormatterSentenceStyle. &quot;&amp;amp;&quot; by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/usesAbbreviatedConjunction</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, strong) NSString *abbreviatedConjunction</Declaration>
			
			
			<Anchor>//api/name/abbreviatedConjunction</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/setUsesAbbreviatedConjunction:</TokenIdentifier>
			<Abstract type="html">Specifies whether to use the standard or abbreviated conjunction when applied with the TTTArrayFormatterSentenceStyle. NO by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL usesAbbreviatedConjunction</Declaration>
			
			
			<Anchor>//api/name/usesAbbreviatedConjunction</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/usesAbbreviatedConjunction</TokenIdentifier>
			<Abstract type="html">Specifies whether to use the standard or abbreviated conjunction when applied with the TTTArrayFormatterSentenceStyle. NO by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL usesAbbreviatedConjunction</Declaration>
			
			
			<Anchor>//api/name/usesAbbreviatedConjunction</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/usesAbbreviatedConjunction</TokenIdentifier>
			<Abstract type="html">Specifies whether to use the standard or abbreviated conjunction when applied with the TTTArrayFormatterSentenceStyle. NO by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL usesAbbreviatedConjunction</Declaration>
			
			
			<Anchor>//api/name/usesAbbreviatedConjunction</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/setUsesSerialDelimiter:</TokenIdentifier>
			<Abstract type="html">Specifies whether to use a delimiter between the conjunction when applied with the TTTArrayFormatterSentenceStyle. YES by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL usesSerialDelimiter</Declaration>
			
			
			<Anchor>//api/name/usesSerialDelimiter</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TTTArrayFormatter/usesSerialDelimiter</TokenIdentifier>
			<Abstract type="html">Specifies whether to use a delimiter between the conjunction when applied with the TTTArrayFormatterSentenceStyle. YES by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL usesSerialDelimiter</Declaration>
			
			
			<Anchor>//api/name/usesSerialDelimiter</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TTTArrayFormatter/usesSerialDelimiter</TokenIdentifier>
			<Abstract type="html">Specifies whether to use a delimiter between the conjunction when applied with the TTTArrayFormatterSentenceStyle. YES by default.</Abstract>
			<DeclaredIn>TTTArrayFormatter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL usesSerialDelimiter</Declaration>
			
			
			<Anchor>//api/name/usesSerialDelimiter</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
	</File>
</Tokens>